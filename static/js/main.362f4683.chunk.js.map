{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Math","round","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","useState","description","setDescription","amount","setAmount","items","setItems","bal","balance","setBalance","placeholder","onClick","currentDateTime","Date","toLocaleString","newBalance","parseInt","updateBalance","handleUpdateBalance","parseFloat","date","alert","map","item","index","Debits","debits","debit","slice","id","intAmount","intBalance","intNewBalance","App","addDebit","logInInfo","newUser","currentUser","creditList","creditAmount","debitList","debitAmount","basename","className","exact","path","render","credits","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.362f4683.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n\r\n\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: ${(Math.round(this.props.accountBalance*100)/100).toFixed(2)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://t3.ftcdn.net/jpg/02/20/36/08/360_F_220360896_PeEH36VS8OSACduJ92phCCE9nuEoEAWT.jpg\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n\r\n        <br/>\r\n\r\n     \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n\r\n","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","import React, {/*Component,*/ useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AccountBalance from './AccountBalance';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Credits = (props) => {\r\n\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [items, setItems] = useState([]);\r\n  \r\n  \r\n  const [balance, setBalance] = useState(props.bal);\r\n \r\n const handleUpdateBalance = (newBalance) => {\r\n  props.updateBalance(newBalance);\r\n }\r\n \r\n\r\n \r\n\r\n  const handleSubmit = () =>{\r\n    if (description && amount) {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      const intAmount = parseInt(amount, 10);\r\n      const intBalance = parseInt(balance,10);\r\n      let newBalance=intAmount + intBalance;\r\n      let intNewBalance= parseInt(newBalance,10)\r\n      handleUpdateBalance(intNewBalance);\r\n\r\n      setItems([...items, { description, amount: parseFloat(amount), date: currentDateTime }]);\r\n          setDescription('');\r\n          setAmount('');\r\n          setBalance(newBalance)\r\n          } else {\r\n            alert(\"Please enter both description and amount\");\r\n          }\r\n  };\r\n\r\n \r\n  return (\r\n    <div>\r\n    <div>\r\n      <h1>Credits</h1>\r\n      <br/>\r\n     \r\n      <AccountBalance accountBalance={balance}/>\r\n      \r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n\r\n    <div>\r\n      \r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"Enter description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        <input\r\n        type=\"number\"\r\n        placeholder='Enter amount'\r\n        value={amount}\r\n        onChange={(e)=> setAmount(e.target.value)}\r\n        />\r\n\r\n        <button onClick={handleSubmit}>Submit</button>\r\n\r\n      \r\n    </div>\r\n    <br/>\r\n\r\n    <div>\r\n      <h1>Credit Transactions:</h1>\r\n     \r\n    </div>\r\n\r\n    <div>\r\n      <ul>\r\n           {items.map((item, index) => (\r\n            <li key={index}>\r\n              {item.description}: ${item.amount.toFixed(2)}\r\n              <br />\r\n              <p>Submitted on: {item.date}</p>\r\n              <hr />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Credits;\r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {/*Component,*/ useState} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [items, setItems] = useState(props.debits);\r\n  const [balance, setBalance] = useState(props.bal);\r\n\r\n  const handleUpdateBalance = (newBalance) => {\r\n    props.updateBalance(newBalance);\r\n   }\r\n\r\n   const handleSubmit = () =>{\r\n    if (description && amount) {\r\n      const currentDateTime = new Date().toLocaleString();\r\n      const intAmount = parseInt(amount, 10);\r\n      const intBalance = parseInt(balance,10);\r\n      let newBalance=intBalance - intAmount;\r\n      let intNewBalance= parseInt(newBalance,10)\r\n      handleUpdateBalance(intNewBalance);\r\n      setItems([...items, { description, amount: parseFloat(amount), date: currentDateTime }]);\r\n          setDescription('');\r\n          setAmount('');\r\n          setBalance(intNewBalance)\r\n          } else {\r\n            alert(\"Please enter both description and amount\");\r\n          }\r\n  };\r\n\r\n\r\n\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    //const { debits } = props;\r\n    return items.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.description}: ${debit.amount.toFixed(2)} <br/> {date}</li>\r\n    });\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      \r\n        <AccountBalance accountBalance = {balance} />\r\n      \r\n\r\n      {debitsView()}\r\n\r\n  \r\n        <input type=\"text\" name=\"description\" \r\n        value={description} placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} />\r\n        <input type=\"number\" name=\"amount\" \r\n        value={amount} placeholder=\"Amount\" onChange={(e) => setAmount(e.target.value)} />\r\n        <button type=\"submit\" onClick={handleSubmit}>Add Debit</button>\r\n    \r\n      <br/>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0.00,\r\n      creditList: [],\r\n      creditAmount:0,\r\n      debitList: [],\r\n      debitAmount: 0,\r\n      currentUser: {\r\n        userName: 'Eli Manning',\r\n        memberSince: '04/24/04',\r\n      }\r\n    }\r\n    \r\n  \r\n  }\r\n\r\n  addDebit = ()=> {\r\n\r\n  }\r\n\r\n  updateBalance = (newBalance) => {\r\n      this.setState({accountBalance: newBalance})\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} \r\n                  updateBalance ={this.updateBalance}\r\n                  bal={this.state.accountBalance} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} \r\n                            bal={this.state.accountBalance}\r\n                            updateBalance={this.updateBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react\">\r\n        <div className='App'>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}